#
# @file .github/workflows/integration_tests.yml
#
# Copyright (c) 2022 OPTIMETA project
# Copyright (c) 2022 Daniel Nüst, Gazi Yücel
# Distributed under the GNU GPL v3. For full terms see the file LICENSE.
#
# Based on https://github.com/o2r-project/ojs-erc-plugin/blob/master/.github/workflows/cypress_test.yml
#
name: OPTIMETA Citations Plugin CI Tests

permissions: write-all

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: ~

jobs:
  citationplugin:
    name: ${{ matrix.pkp-application }} version ${{ matrix.pkp-version }} with ${{ matrix.dbs }}
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        # php-versions: ["7.3","7.4","8.0"] # relies on PHP version from OJS image
        dbs: [ "mysql" ] #'pgsql'
        pkp-application: [ "ojs" ] #'omp' #'ops'
        pkp-version: [ "3_3_0-14" ]
    env:
      OJS_VERSION: ${{ matrix.pkp-version }}

    steps:
      - name: Pre-pull images
        run: |
          docker pull pkpofficial/ojs:${{ matrix.pkp-version }}
          docker pull mariadb:10.2
          docker pull cypress/included:10.2.0

      - name: Install docker-compose and msgfmt
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install docker-compose
          sudo apt-get -qq install gettext

      - name: Install npm
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install PHP
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.1"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install composer
        uses: "ramsey/composer-install@v2"

      - name: Install plugin dependencies
        run: |
          composer update

      - name: Install test dependencies
        run: |
          npm install

      - name: Start OJS and database
        run: |
          docker-compose --file cypress/docker-compose-${{ matrix.dbs }}.yml up -d

      - name: Run Cypress
        env:
          CYPRESS_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_OPEN_CITATIONS_OWNER: ${{ github.repository_owner }}
          CYPRESS_OPEN_CITATIONS_REPOSITORY: ${{ github.event.repository.name }}
        run: |
          npm run-script test_ci

      - name: Show logs
        if: ${{ failure() }}
        run: |
          docker logs db
          docker logs ojs
          cat cypress/logs/*.log

      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: screenshots for ${{ matrix.pkp-application }} with ${{ matrix.dbs }}
          path: |
            ${{ github.workspace }}/cypress/screenshots

      - name: Upload videos
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: videos for ${{ matrix.pkp-application }} with ${{ matrix.dbs }}
          path: |
            ${{ github.workspace }}/cypress/videos
